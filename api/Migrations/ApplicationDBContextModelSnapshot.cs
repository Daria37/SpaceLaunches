// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api.Data;

#nullable disable

namespace SpaceLaunch.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api.Models.Agency", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("CountryCode")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Agency");
                });

            modelBuilder.Entity("api.Models.Launches", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int?>("AgencyID")
                        .HasColumnType("integer");

                    b.Property<int?>("CountryCode")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RocketID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("AgencyID");

                    b.HasIndex("RocketID");

                    b.ToTable("Launches");
                });

            modelBuilder.Entity("api.Models.Rocket", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("AgencyID")
                        .HasColumnType("integer")
                        .HasColumnName("AgencyID");

                    b.Property<string>("Config")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Config");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.HasKey("ID");

                    b.HasIndex("AgencyID");

                    b.ToTable("Rocket", (string)null);
                });

            modelBuilder.Entity("api.Models.Roles", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("api.Models.Users", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RolesID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("RolesID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("api.Models.Launches", b =>
                {
                    b.HasOne("api.Models.Agency", "Agency")
                        .WithMany("Launches")
                        .HasForeignKey("AgencyID");

                    b.HasOne("api.Models.Rocket", "Rocket")
                        .WithMany("Lauches")
                        .HasForeignKey("RocketID");

                    b.Navigation("Agency");

                    b.Navigation("Rocket");
                });

            modelBuilder.Entity("api.Models.Rocket", b =>
                {
                    b.HasOne("api.Models.Agency", null)
                        .WithMany("Rocket")
                        .HasForeignKey("AgencyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api.Models.Users", b =>
                {
                    b.HasOne("api.Models.Roles", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RolesID");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("api.Models.Agency", b =>
                {
                    b.Navigation("Launches");

                    b.Navigation("Rocket");
                });

            modelBuilder.Entity("api.Models.Rocket", b =>
                {
                    b.Navigation("Lauches");
                });

            modelBuilder.Entity("api.Models.Roles", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
